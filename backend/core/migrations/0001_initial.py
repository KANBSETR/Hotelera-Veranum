# Generated by Django 5.0.4 on 2024-06-14 23:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=50)),
                ('categorias', models.CharField(choices=[('Vip', 'Vip'), ('Normal', 'Normal'), ('Economico', 'Economico'), ('Familiar', 'Familiar'), ('Suite', 'Suite'), ('Presidencial', 'Presidencial')], default='Normal', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id_comuna', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id_provincia', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id_region', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroServicioAdicional',
            fields=[
                ('id_servicio', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=50)),
                ('servicios_ad', models.CharField(choices=[('Wifi', 'Wifi'), ('Tv', 'Tv'), ('Desayuno', 'Desayuno'), ('Almuerzo', 'Almuerzo'), ('Cena', 'Cena'), ('Estacionamiento', 'Estacionamiento'), ('Piscina', 'Piscina'), ('Gimnasio', 'Gimnasio'), ('Spa', 'Spa'), ('Bar', 'Bar'), ('Restaurante', 'Restaurante'), ('Mascotas', 'Mascotas'), ('Jardineria', 'Jardineria'), ('Aseo', 'Aseo'), ('Mensajeria', 'Mensajeria'), ('SalonEventos', 'Salon de Eventos'), ('Cocina', 'Cocina'), ('Lavanderia', 'Lavanderia'), ('Estacionamiento', 'Estacionamiento')], default='Wifi', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Usuario'), (2, 'Empleado')])),
                ('nombre', models.CharField(max_length=50)),
                ('ap_paterno', models.CharField(max_length=50)),
                ('ap_materno', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=8)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=50)),
                ('fecha_nacimiento', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ultimo_acceso', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('id_comuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comuna')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('rut', models.CharField(help_text='Ingrese el RUT sin puntos ni guión', max_length=15, primary_key=True, serialize=False, unique=True)),
                ('roles', models.CharField(choices=[('Usuario', 'Usuario normal'), ('EncargadoHabitacion', 'Encargado de Habitaciones'), ('EncargadoInventario', 'Encargado de Inventario'), ('EncargadoServAdicional', 'Encargado de Servicios Adicionales'), ('EncargadoReserva', 'Encargado de Reservas'), ('EncargadoMantencion', 'Encargado de Mantención'), ('EncargadoFinanzas', 'Encargado de Finanzas'), ('EncargadoCliente', 'Encargado de Clientes'), ('EncargadoRestaurante', 'Encargado de Restaurante'), ('EncargadoBar', 'Encargado de Bar'), ('EncargadoSpa', 'Encargado de Spa'), ('EncargadoPiscina', 'Encargado de Piscina'), ('EncargadoGimnasio', 'Encargado de Gimnasio'), ('EncargadoSalonEventos', 'Encargado de Salón de Eventos'), ('EncargadoTienda', 'Encargado de Tienda'), ('EncargadoCocina', 'Encargado de Cocina'), ('EncargadoLavanderia', 'Encargado de Lavandería'), ('EncargadoRecepcion', 'Encargado de Recepción'), ('EncargadoSeguridad', 'Encargado de Seguridad'), ('EncargadoMascotas', 'Encargado de Mascotas'), ('EncargadoJardineria', 'Encargado de Jardinería'), ('EncargadoAseo', 'Encargado de Aseo'), ('EncargadoMensajeria', 'Encargado de Mensajería'), ('EncargadoEstacionamiento', 'Encargado de Estacionamiento'), ('EncargadoMantVehiculos', 'Encargado de Mantención de Vehículos'), ('EncargadoMantMaquinaria', 'Encargado de Mantención de Maquinaria'), ('EncargadoMantEquipos', 'Encargado de Mantención de Equipos'), ('EncargadoMantInfraestructura', 'Encargado de Mantención de Infraestructura'), ('EncargadoMantTecnologia', 'Encargado de Mantención de Tecnología'), ('EncargadoMantRedes', 'Encargado de Mantención de Redes'), ('EncargadoMantSistemas', 'Encargado de Mantención de')], default='Usuario', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id_hotel', models.AutoField(primary_key=True, serialize=False)),
                ('patente_hotel', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=50)),
                ('correo', models.EmailField(max_length=254)),
                ('direccion', models.CharField(max_length=50)),
                ('total_habitaciones_hotel', models.IntegerField()),
                ('estado_habitacion', models.BooleanField()),
                ('id_comuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comuna')),
            ],
        ),
        migrations.AddField(
            model_name='comuna',
            name='id_provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.provincia'),
        ),
        migrations.AddField(
            model_name='provincia',
            name='id_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.region'),
        ),
        migrations.CreateModel(
            name='TipoHabitacion',
            fields=[
                ('id_tipo_habitacion', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=50)),
                ('tipos_habitaciones', models.CharField(choices=[('Simple', 'Simple'), ('Doble', 'Doble'), ('Triple', 'Triple'), ('Matrimonial', 'Matrimonial')], default='Simple', max_length=50)),
                ('id_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroHabitacion',
            fields=[
                ('id_habitacion', models.AutoField(primary_key=True, serialize=False)),
                ('numero_habitacion', models.IntegerField()),
                ('cant_dormitorios', models.IntegerField()),
                ('cant_banos', models.IntegerField()),
                ('cant_camas', models.IntegerField()),
                ('tamano_camas', models.CharField(max_length=50)),
                ('cant_personas_disp', models.IntegerField()),
                ('descripcion', models.CharField(max_length=50)),
                ('precio', models.IntegerField()),
                ('estado_habitacion', models.BooleanField()),
                ('id_empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empleado')),
                ('id_hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.registroservicioadicional')),
                ('id_tipo_habitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tipohabitacion')),
            ],
        ),
        migrations.CreateModel(
            name='HotelDetalle',
            fields=[
                ('id_hotel_detalle', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=350)),
                ('id_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoria')),
                ('id_hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
                ('id_registro_servicio_adicional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.registroservicioadicional')),
                ('id_tipo_habitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tipohabitacion')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id_usuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
